#
# Makefile
#
# See the README file for copyright information and how to reach the author.
#

include ../Make.config

LIBTARGET = libhorchi
HLIB      = -L. -lhorchi

DEMO = demo
TEST = tst

LIBOBJS = common.o config.o db.o epgservice.o dbdict.o json.o

ifdef USEJPEG
LIBOBJS += imgtools.o
endif

ifdef USECURL
LIBOBJS += curl.o
endif

BASELIBS = -lrt -lz -luuid 
BASELIBS += $(shell mysql_config --libs_r)

ifdef USECURL
BASELIBS += -lcurl 
endif

ifdef USELIBXML
BASELIBS += $(shell xml2-config --libs) $(shell xslt-config --libs)
endif
DEBUG = 1

ifdef DEBUG
  CFLAGS += -ggdb -O0
endif

CFLAGS += -fPIC -Wreturn-type -Wall -Wno-parentheses -Wformat -pedantic -Wunused-variable -Wunused-label \
          -Wunused-value -Wunused-function \
          -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64

CFLAGS += $(shell mysql_config --include)
ifdef USELIBXML
CFLAGS += $(shell xml2-config --cflags) $(shell xslt-config --cflags)
endif
DEFINES = $(USES)

all: lib $(TEST) $(DEMO)
lib: $(LIBTARGET).a

$(LIBTARGET).a : $(LIBOBJS)
	@echo Building Lib ...
	$(doLib) $@ $(LIBOBJS)

tst: test.o lib
	$(doLink) test.o $(HLIB) -larchive -lcrypto $(BASELIBS) -o $@

demo: demo.o lib 
	$(doLink) demo.o $(HLIB) -larchive -lcrypto $(BASELIBS) -o $@

clean:
	rm -f *.o *~ core $(TEST) $(DEMO) $(LIBTARGET).a

cppchk:
	cppcheck --template="{file}:{line}:{severity}:{message}" --quiet --force *.c *.h 

%.o: %.c
	@echo Compile "$(*F)" ...
	$(doCompile) $(*F).c -o $@

#--------------------------------------------------------
# dependencies
#--------------------------------------------------------

HEADER = db.h common.h config.h dbdict.h

common.o     :  common.c      $(HEADER) common.h
curl.o       :  curl.c        $(HEADER) curl.h
imgtools.o   :  imgtools.c    $(HEADER) imgtools.h
config.o     :  config.c      $(HEADER) config.h
db.o         :  db.c          $(HEADER) db.h
epgservice.o :  epgservice.c  $(HEADER) epgservice.h
dbdict.o     :  dbdict.c      $(HEADER) dbdict.h
json.o       :  json.c        $(HEADER) json.h

demo.o       :  demo.c        $(HEADER) 
test.o       :  test.c        $(HEADER) 

